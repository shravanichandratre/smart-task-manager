{"ast":null,"code":"var _jsxFileName = \"/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/components/VoiceInput.js\",\n  _s = $RefreshSig$();\n// VoiceInput.js\nimport React, { useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onCreate\n}) => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const [isListening, setIsListening] = useState(false);\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  const toggleListening = () => {\n    if (isListening) {\n      SpeechRecognition.stopListening();\n      setIsListening(false);\n    } else {\n      SpeechRecognition.startListening({\n        continuous: true\n      });\n      setIsListening(true);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (transcript.trim()) {\n      onCreate(transcript);\n      resetTranscript();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voice Task Input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: transcript,\n        readOnly: true,\n        placeholder: \"Say your task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"DN0WRJn4oJQwUPCMVw3blxJLToI=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","VoiceInput","onCreate","_s","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","isListening","setIsListening","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleListening","stopListening","startListening","continuous","handleSubmit","e","preventDefault","trim","onClick","onSubmit","type","value","readOnly","placeholder","_c","$RefreshReg$"],"sources":["/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/components/VoiceInput.js"],"sourcesContent":["// VoiceInput.js\nimport React, { useState } from 'react';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nconst VoiceInput = ({ onCreate }) => {\n  const { transcript, listening, resetTranscript, browserSupportsSpeechRecognition } = useSpeechRecognition();\n  const [isListening, setIsListening] = useState(false);\n\n\n    if (!browserSupportsSpeechRecognition) {\n    return <p>Browser doesn't support speech recognition.</p>;\n}\n\n  const toggleListening = () => {\n    if (isListening) {\n      SpeechRecognition.stopListening();\n      setIsListening(false);\n    } else {\n      SpeechRecognition.startListening({ continuous: true });\n      setIsListening(true);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (transcript.trim()) {\n      onCreate(transcript);\n      resetTranscript();\n    }\n  };\n\n  return (\n    <div>\n      <h2>Voice Task Input</h2>\n      <button onClick={toggleListening}>\n        {isListening ? 'Stop Listening' : 'Start Listening'}\n      </button>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={transcript}\n          readOnly\n          placeholder=\"Say your task\"\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n    </div>\n  );\n};\n\nexport default VoiceInput;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC,eAAe;IAAEC;EAAiC,CAAC,GAAGT,oBAAoB,CAAC,CAAC;EAC3G,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAGnD,IAAI,CAACW,gCAAgC,EAAE;IACvC,oBAAOP,OAAA;MAAAU,QAAA,EAAG;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC7D;EAEE,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIP,WAAW,EAAE;MACfX,iBAAiB,CAACmB,aAAa,CAAC,CAAC;MACjCP,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACLZ,iBAAiB,CAACoB,cAAc,CAAC;QAAEC,UAAU,EAAE;MAAK,CAAC,CAAC;MACtDT,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIjB,UAAU,CAACkB,IAAI,CAAC,CAAC,EAAE;MACrBpB,QAAQ,CAACE,UAAU,CAAC;MACpBE,eAAe,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBd,OAAA;MAAQuB,OAAO,EAAER,eAAgB;MAAAL,QAAA,EAC9BF,WAAW,GAAG,gBAAgB,GAAG;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACTd,OAAA;MAAMwB,QAAQ,EAAEL,YAAa;MAAAT,QAAA,gBAC3BV,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtB,UAAW;QAClBuB,QAAQ;QACRC,WAAW,EAAC;MAAe;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eACFd,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAf,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACX,EAAA,CA5CIF,UAAU;EAAA,QACuEH,oBAAoB;AAAA;AAAA+B,EAAA,GADrG5B,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}