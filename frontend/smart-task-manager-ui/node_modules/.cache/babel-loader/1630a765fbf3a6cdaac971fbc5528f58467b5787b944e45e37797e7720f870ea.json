{"ast":null,"code":"var _jsxFileName = \"/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskInput from './components/TaskInput';\nimport VoiceInput from './components/VoiceInput';\nimport TaskList from './components/TaskList';\nimport TaskDetail from './components/TaskDetail';\nimport { getTasks, createTask, updateTask, deleteTask } from './services/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null); // Selected task state\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await getTasks();\n        setTasks(data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleCreateTask = async taskDescription => {\n    const newTask = {\n      task: taskDescription,\n      completed: false\n    }; // Only task (no task_description)\n    try {\n      const response = await axios.post('http://localhost:8000/tasks/', newTask);\n      setTasks([...tasks, response.data]); // Add the newly created task to the list\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n    }\n  };\n  const handleCompleteTask = async taskId => {\n    try {\n      const updatedTask = await updateTask(taskId, {\n        completed: true\n      });\n      setTasks(tasks.map(task => task.id === taskId ? updatedTask : task));\n    } catch (error) {\n      console.error(\"Error completing task:\", error);\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VoiceInput, {\n      onCreate: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      onCreate: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onSelectTask: setSelectedTask // Set selected task here\n        ,\n        onCompleteTask: handleCompleteTask,\n        onDeleteTask: handleDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskDetail, {\n        task: selectedTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"R97NFuuscheMdGdnqvOCeZt8Mkg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskInput","VoiceInput","TaskList","TaskDetail","getTasks","createTask","updateTask","deleteTask","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","selectedTask","setSelectedTask","loading","setLoading","fetchTasks","data","error","console","handleCreateTask","taskDescription","newTask","task","completed","response","post","handleCompleteTask","taskId","updatedTask","map","id","handleDeleteTask","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","style","display","gap","onSelectTask","onCompleteTask","onDeleteTask","_c","$RefreshReg$"],"sources":["/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskInput from './components/TaskInput';\nimport VoiceInput from './components/VoiceInput';\nimport TaskList from './components/TaskList';\nimport TaskDetail from './components/TaskDetail';\nimport { getTasks, createTask, updateTask, deleteTask } from './services/api';\nimport axios from 'axios';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null); // Selected task state\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await getTasks();\n        setTasks(data);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, []);\n\n  \n  const handleCreateTask = async (taskDescription) => {\n    const newTask = { task: taskDescription, completed: false }; // Only task (no task_description)\n    try {\n      const response = await axios.post('http://localhost:8000/tasks/', newTask);\n      setTasks([...tasks, response.data]);  // Add the newly created task to the list\n    } catch (error) {\n      console.error(\"Error creating task:\", error);\n    }\n  };\n  \n\n  const handleCompleteTask = async (taskId) => {\n    try {\n      const updatedTask = await updateTask(taskId, { completed: true });\n      setTasks(tasks.map(task => (task.id === taskId ? updatedTask : task)));\n    } catch (error) {\n      console.error(\"Error completing task:\", error);\n    }\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Management App</h1>\n      <VoiceInput onCreate={handleCreateTask} />\n      <TaskInput onCreate={handleCreateTask} />\n      \n      {loading ? (\n        <p>Loading tasks...</p>\n      ) : (\n        <div style={{ display: 'flex', gap: '20px' }}>\n          <TaskList\n            tasks={tasks}\n            onSelectTask={setSelectedTask}  // Set selected task here\n            onCompleteTask={handleCompleteTask}\n            onDeleteTask={handleDeleteTask}\n          />\n          <TaskDetail task={selectedTask} />  \n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}