{"ast":null,"code":"// // Import the Axios library to make HTTP requests\n// import axios from 'axios';\n\n// // Set the base URL for your API (this is where your FastAPI backend will be running)\n// const API_URL = 'http://localhost:8000/tasks';  // You can change this to the production backend URL later\n\n// // Function to fetch tasks from the backend\n// export const getTasks = async () => {\n//   try {\n//     // Making a GET request to the API to fetch the list of tasks\n//     const response = await axios.get(API_URL);\n//     // Return the response data (the list of tasks) from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error fetching tasks:\", error);\n//     return [];  // Return an empty array if the request fails\n//   }\n// };\n\n// // Function to create a new task\n// export const createTask = async (task) => {\n//   try {\n//     // Making a POST request to create a new task in the backend\n//     const response = await axios.post(API_URL, task);\n//     // Return the created task's data from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error creating task:\", error);\n//     return null;  // Return null if the request fails\n//   }\n// };\n\n// export const updateTask = async (taskId, updatedFields) => {\n//   try {\n//     const response = await axios.put(`${API_URL}/${taskId}`, updatedFields);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error updating task:\", error);\n//     return null;\n//   }\n// };\n\n// export const deleteTask = async (taskId) => {\n//   try {\n//     await axios.delete(`${API_URL}/${taskId}`);\n//   } catch (error) {\n//     console.error(\"Error deleting task:\", error);\n//   }\n// };\n\n// api.js\nimport axios from 'axios';\n\n// Change the API URL to your backend URL (FastAPI)\nconst API_URL = 'http://localhost:8000/tasks'; // Ensure this matches your FastAPI URL\n\nexport const getTasks = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data; // Return the list of tasks\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    return []; // Return an empty array in case of error\n  }\n};\nexport const createTask = async task => {\n  try {\n    const response = await axios.post(API_URL, task); // POST request to create task\n    return response.data; // Return the created task data\n  } catch (error) {\n    console.error(\"Error creating task:\", error);\n    return null; // Return null if the request fails\n  }\n};","map":{"version":3,"names":["axios","API_URL","getTasks","response","get","data","error","console","createTask","task","post"],"sources":["/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/services/api.js"],"sourcesContent":["// // Import the Axios library to make HTTP requests\n// import axios from 'axios';\n\n// // Set the base URL for your API (this is where your FastAPI backend will be running)\n// const API_URL = 'http://localhost:8000/tasks';  // You can change this to the production backend URL later\n\n// // Function to fetch tasks from the backend\n// export const getTasks = async () => {\n//   try {\n//     // Making a GET request to the API to fetch the list of tasks\n//     const response = await axios.get(API_URL);\n//     // Return the response data (the list of tasks) from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error fetching tasks:\", error);\n//     return [];  // Return an empty array if the request fails\n//   }\n// };\n\n// // Function to create a new task\n// export const createTask = async (task) => {\n//   try {\n//     // Making a POST request to create a new task in the backend\n//     const response = await axios.post(API_URL, task);\n//     // Return the created task's data from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error creating task:\", error);\n//     return null;  // Return null if the request fails\n//   }\n// };\n\n// export const updateTask = async (taskId, updatedFields) => {\n//   try {\n//     const response = await axios.put(`${API_URL}/${taskId}`, updatedFields);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error updating task:\", error);\n//     return null;\n//   }\n// };\n\n// export const deleteTask = async (taskId) => {\n//   try {\n//     await axios.delete(`${API_URL}/${taskId}`);\n//   } catch (error) {\n//     console.error(\"Error deleting task:\", error);\n//   }\n// };\n\n// api.js\nimport axios from 'axios';\n\n// Change the API URL to your backend URL (FastAPI)\nconst API_URL = 'http://localhost:8000/tasks';  // Ensure this matches your FastAPI URL\n\nexport const getTasks = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;  // Return the list of tasks\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    return [];  // Return an empty array in case of error\n  }\n};\n\nexport const createTask = async (task) => {\n  try {\n    const response = await axios.post(API_URL, task);  // POST request to create task\n    return response.data;  // Return the created task data\n  } catch (error) {\n    console.error(\"Error creating task:\", error);\n    return null;  // Return null if the request fails\n  }\n};\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,6BAA6B,CAAC,CAAE;;AAEhD,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAE;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE,CAAC,CAAE;EACd;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC,CAAC,CAAE;IACnD,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAE;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI,CAAC,CAAE;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}