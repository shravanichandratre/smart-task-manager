{"ast":null,"code":"// // Import the Axios library to make HTTP requests\n// import axios from 'axios';\n\n// // Set the base URL for your API (this is where your FastAPI backend will be running)\n// const API_URL = 'http://localhost:8000/tasks';  // You can change this to the production backend URL later\n\n// // Function to fetch tasks from the backend\n// export const getTasks = async () => {\n//   try {\n//     // Making a GET request to the API to fetch the list of tasks\n//     const response = await axios.get(API_URL);\n//     // Return the response data (the list of tasks) from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error fetching tasks:\", error);\n//     return [];  // Return an empty array if the request fails\n//   }\n// };\n\n// // Function to create a new task\n// export const createTask = async (task) => {\n//   try {\n//     // Making a POST request to create a new task in the backend\n//     const response = await axios.post(API_URL, task);\n//     // Return the created task's data from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error creating task:\", error);\n//     return null;  // Return null if the request fails\n//   }\n// };\n\n// export const updateTask = async (taskId, updatedFields) => {\n//   try {\n//     const response = await axios.put(`${API_URL}/${taskId}`, updatedFields);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error updating task:\", error);\n//     return null;\n//   }\n// };\n\n// export const deleteTask = async (taskId) => {\n//   try {\n//     await axios.delete(`${API_URL}/${taskId}`);\n//   } catch (error) {\n//     console.error(\"Error deleting task:\", error);\n//   }\n// };\n\n// api.js\n\n// api.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:000/tasks';\nexport const getTasks = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    return [];\n  }\n};\nexport const createTask = async task => {\n  try {\n    const response = await axios.post(API_URL, task);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating task:\", error);\n    return null;\n  }\n};\n\n// Add the updateTask function\nexport const updateTask = async (taskId, updatedTask) => {\n  try {\n    const response = await axios.put(`${API_URL}/${taskId}`, updatedTask);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating task:\", error);\n    return null;\n  }\n};\n\n// Add the deleteTask function\nexport const deleteTask = async taskId => {\n  try {\n    await axios.delete(`${API_URL}/${taskId}`);\n    return true;\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getTasks","response","get","data","error","console","createTask","task","post","updateTask","taskId","updatedTask","put","deleteTask","delete"],"sources":["/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/services/api.js"],"sourcesContent":["// // Import the Axios library to make HTTP requests\n// import axios from 'axios';\n\n// // Set the base URL for your API (this is where your FastAPI backend will be running)\n// const API_URL = 'http://localhost:8000/tasks';  // You can change this to the production backend URL later\n\n// // Function to fetch tasks from the backend\n// export const getTasks = async () => {\n//   try {\n//     // Making a GET request to the API to fetch the list of tasks\n//     const response = await axios.get(API_URL);\n//     // Return the response data (the list of tasks) from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error fetching tasks:\", error);\n//     return [];  // Return an empty array if the request fails\n//   }\n// };\n\n// // Function to create a new task\n// export const createTask = async (task) => {\n//   try {\n//     // Making a POST request to create a new task in the backend\n//     const response = await axios.post(API_URL, task);\n//     // Return the created task's data from the backend\n//     return response.data;\n//   } catch (error) {\n//     // Handle any errors that occur during the API call\n//     console.error(\"Error creating task:\", error);\n//     return null;  // Return null if the request fails\n//   }\n// };\n\n// export const updateTask = async (taskId, updatedFields) => {\n//   try {\n//     const response = await axios.put(`${API_URL}/${taskId}`, updatedFields);\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error updating task:\", error);\n//     return null;\n//   }\n// };\n\n// export const deleteTask = async (taskId) => {\n//   try {\n//     await axios.delete(`${API_URL}/${taskId}`);\n//   } catch (error) {\n//     console.error(\"Error deleting task:\", error);\n//   }\n// };\n\n// api.js\n\n// api.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:000/tasks';\n\nexport const getTasks = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    return [];\n  }\n};\n\nexport const createTask = async (task) => {\n  try {\n    const response = await axios.post(API_URL, task);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error creating task:\", error);\n    return null;\n  }\n};\n\n// Add the updateTask function\nexport const updateTask = async (taskId, updatedTask) => {\n  try {\n    const response = await axios.put(`${API_URL}/${taskId}`, updatedTask);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating task:\", error);\n    return null;\n  }\n};\n\n// Add the deleteTask function\nexport const deleteTask = async (taskId) => {\n  try {\n    await axios.delete(`${API_URL}/${taskId}`);\n    return true;\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n    return false;\n  }\n};\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEQ,IAAI,CAAC;IAChD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEC,WAAW,KAAK;EACvD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,IAAIW,MAAM,EAAE,EAAEC,WAAW,CAAC;IACrE,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,UAAU,GAAG,MAAOH,MAAM,IAAK;EAC1C,IAAI;IACF,MAAMZ,KAAK,CAACgB,MAAM,CAAC,GAAGf,OAAO,IAAIW,MAAM,EAAE,CAAC;IAC1C,OAAO,IAAI;EACb,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}