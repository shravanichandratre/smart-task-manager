{"ast":null,"code":"var _jsxFileName = \"/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskInput from './components/TaskInput';\nimport VoiceInput from './components/VoiceInput';\nimport { getTasks, createTask } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const data = await getTasks();\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n  const handleCreateTask = async taskDescription => {\n    const newTask = {\n      description: taskDescription\n    };\n    const createdTask = await createTask(newTask);\n    if (createdTask) {\n      setTasks([...tasks, createdTask]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Management App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VoiceInput, {\n      onCreate: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      onCreate: handleCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.description\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskInput","VoiceInput","getTasks","createTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetchTasks","data","handleCreateTask","taskDescription","newTask","description","createdTask","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","map","task","index","_c","$RefreshReg$"],"sources":["/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskInput from './components/TaskInput';\nimport VoiceInput from './components/VoiceInput';\nimport { getTasks, createTask } from './services/api';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const data = await getTasks();\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n\n  const handleCreateTask = async (taskDescription) => {\n    const newTask = { description: taskDescription };\n    const createdTask = await createTask(newTask);\n    if (createdTask) {\n      setTasks([...tasks, createdTask]);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Task Management App</h1>\n      <VoiceInput onCreate={handleCreateTask} />\n      <TaskInput onCreate={handleCreateTask} />\n      {/* Display tasks */}\n      <ul>\n        {tasks.map((task, index) => (\n          <li key={index}>{task.description}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,QAAQ,EAAEC,UAAU,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAAC,CAAC;MAC7BO,QAAQ,CAACE,IAAI,CAAC;IAChB,CAAC;IACDD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,gBAAgB,GAAG,MAAOC,eAAe,IAAK;IAClD,MAAMC,OAAO,GAAG;MAAEC,WAAW,EAAEF;IAAgB,CAAC;IAChD,MAAMG,WAAW,GAAG,MAAMb,UAAU,CAACW,OAAO,CAAC;IAC7C,IAAIE,WAAW,EAAE;MACfP,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,WAAW,CAAC,CAAC;IACnC;EACF,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhB,OAAA,CAACJ,UAAU;MAACqB,QAAQ,EAAEV;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1ChB,OAAA,CAACL,SAAS;MAACsB,QAAQ,EAAEV;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzChB,OAAA;MAAAY,QAAA,EACGT,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBpB,OAAA;QAAAY,QAAA,EAAiBO,IAAI,CAACT;MAAW,GAAxBU,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAhCID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}