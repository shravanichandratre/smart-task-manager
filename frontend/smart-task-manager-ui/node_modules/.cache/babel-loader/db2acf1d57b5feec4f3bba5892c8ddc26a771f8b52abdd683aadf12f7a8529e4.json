{"ast":null,"code":"var _jsxFileName = \"/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/components/TaskDetail.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDetail = ({\n  task\n}) => {\n  if (!task) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Select a task to see details\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Task:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 10\n      }, this), \" \", task.task]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Created At:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 10\n      }, this), \" \", new Date(task.created_at).toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Task ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 10\n      }, this), \" \", task.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskDetail;\nexport default TaskDetail;\nvar _c;\n$RefreshReg$(_c, \"TaskDetail\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskDetail","task","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","created_at","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/components/TaskDetail.js"],"sourcesContent":["import React from 'react';\n\nconst TaskDetail = ({ task }) => {\n  if (!task) return <p>Select a task to see details</p>;\n\n  return (\n    <div>\n      <h2>Task Details</h2>\n      <p><strong>Task:</strong> {task.task}</p> {/* Updated to show task description */}\n      <p><strong>Created At:</strong> {new Date(task.created_at).toLocaleString()}</p> {/* Show created_at */}\n      <p><strong>Task ID:</strong> {task.id}</p> {/* Show Task ID */}\n    </div>\n  );\n};\n\nexport default TaskDetail;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,IAAI,CAACA,IAAI,EAAE,oBAAOF,OAAA;IAAAG,QAAA,EAAG;EAA4B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErD,oBACEP,OAAA;IAAAG,QAAA,gBACEH,OAAA;MAAAG,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBP,OAAA;MAAAG,QAAA,gBAAGH,OAAA;QAAAG,QAAA,EAAQ;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACL,IAAI,CAACA,IAAI;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eAC1CP,OAAA;MAAAG,QAAA,gBAAGH,OAAA;QAAAG,QAAA,EAAQ;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC,IAAIC,IAAI,CAACN,IAAI,CAACO,UAAU,CAAC,CAACC,cAAc,CAAC,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eACjFP,OAAA;MAAAG,QAAA,gBAAGH,OAAA;QAAAG,QAAA,EAAQ;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACL,IAAI,CAACS,EAAE;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACK,EAAA,GAXIX,UAAU;AAahB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}