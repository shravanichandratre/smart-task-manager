{"ast":null,"code":"// // VoiceInput.js\n// import React, { useState } from 'react';\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\n// const VoiceInput = ({ onCreate }) => {\n//   const { transcript, listening, resetTranscript, browserSupportsSpeechRecognition } = useSpeechRecognition();\n//   const [isListening, setIsListening] = useState(false);\n\n//     if (!browserSupportsSpeechRecognition) {\n//     return <p>Browser doesn't support speech recognition.</p>;\n// }\n\n//   const toggleListening = () => {\n//     if (isListening) {\n//       SpeechRecognition.stopListening();\n//       setIsListening(false);\n//     } else {\n//       SpeechRecognition.startListening({ continuous: true });\n//       setIsListening(true);\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (transcript.trim()) {\n//       onCreate(transcript);\n//       resetTranscript();\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Voice Task Input</h2>\n//       <button onClick={toggleListening}>\n//         {isListening ? 'Stop Listening' : 'Start Listening'}\n//       </button>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={transcript}\n//           readOnly\n//           placeholder=\"Say your task\"\n//         />\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default VoiceInput;","map":{"version":3,"names":[],"sources":["/Users/shravanichandratre/Desktop/smart-task-manager/frontend/smart-task-manager-ui/src/components/VoiceInput.js"],"sourcesContent":["// // VoiceInput.js\n// import React, { useState } from 'react';\n// import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\n// const VoiceInput = ({ onCreate }) => {\n//   const { transcript, listening, resetTranscript, browserSupportsSpeechRecognition } = useSpeechRecognition();\n//   const [isListening, setIsListening] = useState(false);\n\n\n//     if (!browserSupportsSpeechRecognition) {\n//     return <p>Browser doesn't support speech recognition.</p>;\n// }\n\n//   const toggleListening = () => {\n//     if (isListening) {\n//       SpeechRecognition.stopListening();\n//       setIsListening(false);\n//     } else {\n//       SpeechRecognition.startListening({ continuous: true });\n//       setIsListening(true);\n//     }\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (transcript.trim()) {\n//       onCreate(transcript);\n//       resetTranscript();\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>Voice Task Input</h2>\n//       <button onClick={toggleListening}>\n//         {isListening ? 'Stop Listening' : 'Start Listening'}\n//       </button>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           value={transcript}\n//           readOnly\n//           placeholder=\"Say your task\"\n//         />\n//         <button type=\"submit\">Add Task</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default VoiceInput;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}